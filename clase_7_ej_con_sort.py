# -*- coding: utf-8 -*-
"""Clase 7 ej. Con sort.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Odup-NYwn0Mb_YBIwy6tk379uO62aZzq
"""

#Ejercicio Clase 7 1era version con sort

clientes=[]

#Ingreso de datos
print("Ingrese su nombre. Para finalizar, ingrese Fin")
#uso un bucle para validar los nombres que se ingresaran
while True:
      nombre=input("Ingrese su nombre: ")
      if nombre.lower().capitalize()== "Fin": #instruccion para terminar de ingresar datos
          break
      if len(nombre) <= 0: #valido que nombre bno este vacio
              nombre=input("Por favor ingrese su nombre: ")
      clientes.append(nombre.capitalize()) #si no esta vacio, se agrega a la lista poniendolo en mayuscula
clientes.sort() #ordeno la lista alfabeticamente
print(clientes) #imprimo la lista ordenada alfabeticamente

#Ejercicio Clase 7 2da version con sort
# aqui ademas de ingresar el nombre
#validar que no este vacio
#Colocar en mayusculas los nombres
#asentar que con fin se de por terminado el ingreso
#VALIDO QUE SEAN CARATERES ALFABETICOS LOS QUE ESTEN INGRESADOS
# SE INGRESAN OTROS CARACTERES SEÑALA ERROR Y PIDE QUE SE INGRESE NUEVAMENTE
clientes=[]

#Ingreso de datos
print("Ingrese su nombre. Para finalizar, ingrese Fin ")

while True:
      nombre=input("Ingrese su nombre: ")
      if nombre.lower().capitalize()== "Fin":
          break
      elif len(nombre) <= 0 or not nombre.isalpha():
              nombre=input("Error.Por favor ingrese su nombre: ")
      else:
        clientes.append(nombre.capitalize())
clientes.sort()
print(clientes)

#Ejercicio Clase 7 3era version con sort
# aqui ademas de ingresar el nombre
#validar que no este vacio
#Colocar en mayusculas los nombres
#asentar que con fin se de por terminado el ingreso
#VALIDAR S CARATERES ALFABETICOS LOS INGRESADOS
# SDE LO CONTRARIO SEÑALA ERROR Y PIDE QUE SE INGRESE NUEVAMENTE
#ORDENAR ALFABETICAMENTE
#IMPRIMIR LISTA ORDENADA
#INGRESAREMOS APELLIDO Y NOMBRE
#SOLICITAREMOS QUE SE INGRESEN AMBOS DATOS
#ORDENAREMOS LA LISTA POR APELLIDO
clientes=[]
i=1
division_nombre=0
#Ingreso de datos
print("Ingrese su nombre y apellido. Para finalizar, ingrese Fin ")

while True:
      nombre_apellido=input("Ingrese su nombre y apellido: ")
      nombre_apellido=nombre_apellido.strip().lower()
      division_nombre=nombre_apellido.split()
      if nombre_apellido.lower().capitalize()== "Fin":
          break
      elif len(nombre_apellido) <= 0 or len(division_nombre)<1 or len(division_nombre)<2 and len(division_nombre)>0:
              nombre_apellido=input("Error.Por favor ingrese su nombre y apellido: ")
      else:
       nombre=division_nombre[0]
       apellido=division_nombre[1]
       if not nombre.isalpha():
         nombre=input("ERROR. Contiene Caracteres No Alfabeticos. Por favor, ingrese su nombre: ")
       else:
         if not apellido.isalpha():
           apellido=input("ERROR. Contiene Caracteres No Alfabeticos. Por favor, ingrese su apellido: ")
         else:
          #clientes.append(nombre_apellido.title()) #guardo en la lista el nombre y apellido en mayiuscula.
          apellido_nombre=apellido.capitalize(), nombre.capitalize()# invierto el orden del nombre y apellido y lo pongo en mayuscula
          clientes.append(apellido_nombre)
clientes.sort()
print(clientes)