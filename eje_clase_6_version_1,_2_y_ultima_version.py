# -*- coding: utf-8 -*-
"""eje clase 6 version 1, 2 y ultima version.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fbCeA8KF2wc-IjAgfBxtBc2lhS1lMZbZ
"""

#ejercicio 1 clase 06
#Usando bucles, lista, capitalize() etc como indica la consigna
#creamos una lista llamada clientes
clientes=[]
clientes=["Laura", "Martin"," ","Susana"," " ]
"""
recorremos la lista clientes con un bucle verificando que
no este vacio el nombre, colocando la inicial en mayuscula
el resto de las letras en minusculas
y comrpbando que se hayan ingresado solo letras y no nuneros o caracteres es´peciales
"""
for i in range(len(clientes)):
 if clientes[i].capitalize().lower().strip().isalpha():
  #imprimo el cliente el numero nombre o mensaje no valido si corresponde
  print(f"Cliente {i+1}: {clientes[i]}")
 else:
  print(f"Cliente {i+1} no valido ")

#ejercicio 1 clase 06
#Usando bucles, lista, capitalize() etc como indica la consigna
#creamos una lista llamada clientes
clientes=[]
#ya que puede ingresarse un nombre compuesto o nombre y apellido y el anterior programa daba error en ese sentido
#toma como vacia la cadena por el espacio entre los dos nombres
clientes=["laura lopez", "Martin "," ","susAna Gomez"," " ]
"""
recorremos la lista clientes con un bucle verificando que
no este vacio el nombre, colocando la inicial en mayuscula
el resto de las letras en minusculas
y comrpbando que se hayan ingresado solo letras y no nuneros o caracteres es´peciales
"""
i=1
division_nombre=0
for cliente in clientes:
  cliente=cliente.strip().lower()
  division_nombre=cliente.split()
  if len(division_nombre)<1:
    print(f"Cliente {i}: NO VALIDO")
  elif len(division_nombre)<2 and len(division_nombre)>0: #or not division_nombre[0] or not division_nombre[1]:
    print(f"Clientes {i}: {cliente.capitalize() } INCOMPLETO")
  else:
     print(f"Cliente {i}: {cliente.title()}")
  i=i+1

#ejercicio 1 clase 06
#Usando bucles, lista, capitalize() etc como indica la consigna
#creamos una lista llamada clientes
clientes=[]
clientes=["laura lopez", "Martin "," ","susAna Gomez"," " , "Vb5 Virginia"]
"""
en el anterior ejercicio version 2 solucionamos que en la primera version
no se podia ingresar un nombre compuesto o nombre y apellido
ya  que en esa prmera version, daba error en ese sentido al
tomar como vacia la cadena por el espacio entre los dos nombres
En esta tercera version solucionaremos el tema de que haya  caracteres especiales
o numeros ingresados dentro de los nombres
recorremos la lista clientes con un bucle verificando que
no este vacio el nombre, colocando la inicial en mayuscula
el resto de las letras en minusculas
y comrpbando que se hayan ingresado solo letras y no nuneros o caracteres es´peciales
"""
i=1
division_nombre=0
clientes_validos=[]
clientes_nulos=0
clientes_incompletos=[]
clientes_erroresAlpha=[]
for cliente in clientes:
  cliente=cliente.strip().lower()
  division_nombre=cliente.split()
  if len(division_nombre)<1:
    print(f"Cliente {i}: NO VALIDO")
    clientes_nulos=clientes_nulos+1
  else:
    if len(division_nombre)<2 and len(division_nombre)>0: #or not division_nombre[0] or not division_nombre[1]:
      print(f"Clientes {i}: {cliente.capitalize() } INCOMPLETO")
      clientes_incompletos.append(cliente)
    else:
      nombre=division_nombre[0]
      apellido=division_nombre[1]
      if not nombre.isalpha():
         print(f"Cliente {i}: {cliente} ERROR Nombre {nombre} Contiene Caracteres No Alfabeticos")
         clientes_erroresAlpha.append(cliente)
      else:
         if not apellido.isalpha():
          print(f"Cliente {i}: {cliente} ERROR Apellido {apellido} Contiene Caracteres No Alfabeticos")
          clientes_erroresAlpha.append(cliente)
         else:

           print(f"Cliente {i}: {cliente.title()}")
           clientes_validos.append(cliente)
  i=i+1

print("Clientes Correctamente ingresadps", clientes_validos)
print ("Clientes Incorrectamente ingresados o Nulos:", clientes_nulos)
print ("Clientes con Datos Incompletos", clientes_incompletos)
print("Clientes con Errores Alfabeticos", clientes_erroresAlpha)